# user and group to run as
user nginx nginx;

# number of nginx workers
worker_processes core_count;

# Number of worker connections. 1024 is a good default
events {
  worker_connections 1024;
}

# start the http module where we config http access.
http {
  proxy_temp_path       /var/spool/nginx/tmp/proxy;
  fastcgi_temp_path     /var/spool/nginx/tmp/fastcgi;
  client_body_temp_path /var/spool/nginx/tmp/client;


  # pull in mime-types. You can break out your config 
  # into as many include's as you want to make it cleaner
  include /etc/nginx/mime.types;

  # set a default type for the rare situation that
  # nothing matches from the mimie-type include
  default_type application/octet-stream;

  # configure log format
  log_format main		'$remote_addr - $remote_user [$time_local] '
    '$host "$request" $status $body_bytes_sent "$http_referer" '
    '"$http_user_agent"';

  # main access log
  access_log  /var/log/nginx/access.log  main;

  # main error log
  error_log  /var/log/nginx/error.log debug;

  # no sendfile on OSX
  sendfile              on;

  # these are good default values.
  tcp_nopush            on;
  tcp_nodelay           off;
  keepalive_timeout     65;
  proxy_read_timeout    180;
  proxy_connect_timeout 75;
  proxy_send_timeout    180;

  # output compression saves bandwidth 
  gzip              on;
  gzip_http_version 1.0;
  gzip_comp_level   2;
  gzip_proxied      any;
  gzip_types        text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  # pass from backend information about server
  server_names_hash_bucket_size	128;

  ## virtual hosts
  ##
  include	/etc/nginx/vhosts/*.conf;
}
